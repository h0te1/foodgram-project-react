name: Main Foodgram workflow

on:
  push:
    branches:
      - main

jobs:

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: kittygram_user
          POSTGRES_PASSWORD: kittygram_password
          POSTGRES_DB: kittygram
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0
        pip install -r ./backend/requirements.txt
    - name: Test with flake8 and django tests
      env:
        POSTGRES_USER: kittygram_user
        POSTGRES_PASSWORD: kittygram_password
        POSTGRES_DB: kittygram
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
      run: |
        python -m flake8 backend/

  build_and_push_backend_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: h0te1/foodgram_backend:latest

  build_and_push_frontend_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: h0te1/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-22.04
    needs:
      - tests
      - build_and_push_backend_to_docker_hub
      - build_and_push_frontend_to_docker_hub
    steps:
    - name: remote ssh commands to deploy
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey: ${{ secrets.PRIVATE_KEY }}
        command: |
          cd foodgram-project-react
          sudo docker-compose stop
          sudo docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm
          sudo docker rmi ${{ secrets.DOCKER_USER }}/foodgram_frontend
          sudo docker rmi ${{ secrets.DOCKER_USER }}/foodgram_backend
          sudo docker-compose up -d
          sudo docker image prune -a

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: фудграм успешно задеплоен!
